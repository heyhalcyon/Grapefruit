package edu.cs425.mp3;

import java.util.ArrayList;

enum TaskType { // Task type enumeration
    MAPLE,
    JUICE
}

enum TaskStatus { // Task status enumeration
    UNSCHEDULED, // Task has not been scheduled
    SCHEDULED, // Task has been scheduled (assigned to a worker node)
    COMPLETE, // Worker node completes the task, but the master node hasn't processed the output of worker node generated.
    PROCESSED // Master node has processed task's output generated by assigned worker node
}

public class Task {

    private int taskID; // Task ID
    private int nodeID; // ID of node task is assigned
    private TaskType taskType; // Task Type: Maple / Juice
    private TaskStatus taskStatus; // Task status: unscheduled/scheduled/complete/processed
    private String exeFileName; // Name of executable file used to perform the task
    private ArrayList<String> inputFileList; // List of input files to be processed by the task
    private String outputFileName; // Name of output file of this task.

    // Constructor
    public Task(int taskID, int nodeID, TaskType taskType, TaskStatus taskStatus, String exeFileName, ArrayList<String> inputFileList) {
        this.taskID = taskID;
        this.nodeID = nodeID;
        this.taskType = taskType;
        this.taskStatus = taskStatus;
        this.exeFileName = exeFileName;
        this.inputFileList = inputFileList;
    }

    // Getter
    public int getTaskID() {
        return taskID;
    }

    // Setter
    public void setTaskID(int taskID) {
        this.taskID = taskID;
    }

    // Getter
    public int getNodeID() {
        return nodeID;
    }

    // Setter
    public void setNodeID(int nodeID) {
        this.nodeID = nodeID;
    }

    // Getter
    public TaskType getTaskType() {
        return taskType;
    }

    // Setter
    public void setTaskType(TaskType taskType) {
        this.taskType = taskType;
    }

    // Getter
    public TaskStatus getTaskStatus() {
        return taskStatus;
    }

    // Setter
    public void setTaskStatus(TaskStatus taskStatus) {
        this.taskStatus = taskStatus;
    }

    // Getter
    public String getExeFileName() {
        return exeFileName;
    }

    // Setter
    public void setExeFileName(String exeFileName) {
        this.exeFileName = exeFileName;
    }

    // Getter
    public ArrayList<String> getInputFileList() {
        return inputFileList;
    }

    // Setter
    public void setInputFileList(ArrayList<String> inputFileList) {
        this.inputFileList = inputFileList;
    }

    // Getter
    public String getOutputFileName() {
        return outputFileName;
    }

    // Getter
    public void setOutputFileName(String outputFileName) {
        this.outputFileName = outputFileName;
    }

    // Serialization: serialize Task object into a Java String
    public String serialize() {
        return taskID + "@" + exeFileName + "@" + serializeInputFileList();
    }

    // Helper: serialize input file list into a string
    private String serializeInputFileList() {
        String serializedFileListStr = "";
        for (String fileName : inputFileList) {
            serializedFileListStr += (fileName + ":");
        }
        return serializedFileListStr.substring(0, serializedFileListStr.length() - 1);
    }
}
